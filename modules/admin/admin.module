<?php

/**
 * @file
 * The administrative configurations for FlightPath.
 *
 *
 */





/**
 * Implementation of hook_menu
 *
 */
function admin_menu() {
  $items = array();

  $items["admin-tools/admin"] = array(
     "title" => "FlightPath وحدة تحكم مشرف",
     "page_callback" => "admin_display_main",
     "access_arguments" => array("can_access_admin"),
     "tab_family" => "admin",
     "page_settings" => array(
       "page_has_search" => FALSE,
       "page_banner_is_link" => TRUE,
       "page_hide_report_error" => TRUE,
       "target" => "_blank",
     ),
     "type" => MENU_TYPE_TAB,
  );

  $items["admin/config/urgent-message"] = array(
    "title" => "تحرير رسالة عاجلة",
    "description" => "Set a message which will be displayed to all users on every page",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_urgent_message_form", "system_settings"),
    "access_arguments" => array("can_edit_urgent_message"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_icon" => fp_theme_location() . "/images/urgent.png",
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin-tools/admin",
  );



  $items["admin/config/watchdog"] = array(
    "title" => "Watchdog (logs)",
    "description" => "View log messages from throughout the system",
    "page_callback" => "admin_display_watchdog",
    "access_arguments" => array("display_watchdog"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_show_title" => TRUE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_icon" => fp_theme_location() . "/images/log.png",
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin-tools/admin",
  );



  $items["admin/config/watchdog/%"] = array(
    "title" => "View Watchdog Entry",
    "page_callback" => "admin_display_watchdog_entry",
    "page_arguments" => array(3),
    "access_arguments" => array("display_watchdog"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_show_title" => TRUE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" =>"العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "Back to watchdog",
          "path" => "admin/config/watchdog",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%&sev_filter=%SEV_FILTER%&page=%PAGE%&type_filter=%TYPE_FILTER%",
        ),

      ),
    ),
    "type" => MENU_TYPE_CALLBACK,
    "tab_parent" => "admin-tools/admin",
  );



  $items["admin/duplicate-year"] = array(
    "title" => "تكرار كامل كتالوج العام",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_duplicate_year_form"),
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin-tools/admin",
  );



  $items["admin/edit-advising-settings"] = array(
    "title" => "تعديل إعدادات الاستشارة",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_advising_settings_form", "system_settings"),
    "access_arguments" => array("can_edit_advising_settings"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin-tools/admin",
  );


  $items["admin/apply-draft-changes"] = array(
    "title" => "تطبيق تغييرات المسودة",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_apply_draft_changes_form"),
    "access_arguments" => array("can_apply_draft_changes"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin-tools/admin",
  );

   ///////////////////////////////////////////////////////
  ////////////////////// Degree Editing ///////////////////

  $items["admin/degrees"] = array(
    "title" => "الدرجات العلمية",
    "page_callback" => "admin_display_degrees",
    "access_arguments" => array("can_access_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.degrees.inc",
    "type" => MENU_TYPE_TAB,
    "tab_family" => "admin_degrees",
  );

  $items["admin/degrees/edit-degree"] = array(
    "title" => "تعديل الدرجات العلمية",
    "page_callback" => "admin_display_edit_degree",
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "العودة إلى قائمة الدرجات العلمية",
          "path" => "admin/degrees",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.degrees.inc",
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin/degrees",
  );

  $items["admin/degrees/handle-edit-degree-submit"] = array(
    "page_callback" => "admin_handle_edit_degree_submit",
    "access_arguments" => array("can_edit_data_entry"),
    "file" => menu_get_module_path("admin") . "/admin.degrees.inc",
    "type" => MENU_TYPE_CALLBACK,
  );


  $items["admin/degrees/popup-add-group"] = array(
    "title" => "إضافة مجموعة",
    "page_callback" => "admin_display_degrees_popup_add_group",
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_is_popup" => TRUE,
      "page_hide_report_error" => TRUE,
    ),
    "file" => menu_get_module_path("admin") . "/admin.degrees.inc",
    "type" => MENU_TYPE_CALLBACK,
  );


  $items["admin/degrees/add-degree"] = array(
    "title" => "إضافة درجة علمية",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_add_degree_form"),
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "العودة إلى قائمة الدرجات العلمية",
          "path" => "admin/degrees",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.degrees.inc",
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin/degrees",
  );

  $items["admin/degrees/copy-degree"] = array(
    "title" => "نسخ درجة علمية",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_copy_degree_form"),
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "العودة إلى قائمة الدرجات العلمية",
          "path" => "admin/degrees",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.degrees.inc",
    "type" => MENU_TYPE_CALLBACK,
    "tab_parent" => "admin/degrees",
  );



   ///////////////////////////////////////////////////////
  ////////////////////// Group Editing ///////////////////

  $items["admin/groups"] = array(
    "title" => "المجموعات",
    "page_callback" => "admin_display_groups",
    "access_arguments" => array("can_access_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.groups.inc",
    "type" => MENU_TYPE_TAB,
    "tab_family" => "admin_groups",
  );

  $items["admin/groups/edit-group"] = array(
    "title" => "تعديل المجموعة",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_edit_group_form"),
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" =>"العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "Back to Groups list",
          "path" => "admin/groups",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.groups.inc",
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin/groups",
  );


  $items["admin/groups/popup-select-icon"] = array(
    "title" => "اختيار أيقونة",
    "page_callback" => "admin_display_groups_popup_select_icon",
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_is_popup" => TRUE,
      "page_hide_report_error" => TRUE,
    ),
    "file" => menu_get_module_path("admin") . "/admin.groups.inc",
    "type" => MENU_TYPE_CALLBACK,
  );

  $items["admin/groups/popup-edit-definition"] = array(
    "title" => "تعديل التعريف",
    "page_callback" => "admin_display_groups_popup_edit_definition",
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_is_popup" => TRUE,
      "page_hide_report_error" => TRUE,
    ),
    "file" => menu_get_module_path("admin") . "/admin.groups.inc",
    "type" => MENU_TYPE_CALLBACK,
  );

  $items["admin/groups/popup-show-group-use"] = array(
    "title" => "استخدام المجموعة",
    "page_callback" => "admin_display_groups_popup_show_group_use",
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_is_popup" => TRUE,
      "page_hide_report_error" => TRUE,
    ),
    "file" => menu_get_module_path("admin") . "/admin.groups.inc",
    "type" => MENU_TYPE_CALLBACK,
  );

  $items["admin/groups/process-all-definitions"] = array(
    "title" => "معالجة كل التعاريف",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_process_all_definitions_form"),
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" =>"العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "العودة إلى قائمة المجموعات",
          "path" => "admin/groups",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.groups.inc",
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin/groups",
  );


  /////////////////////////////////////////////////
  /////////////////// Courses editing ////////////////
  $items["admin/courses"] = array(
    "title" => "المساقاتs",
    "page_callback" => "admin_display_courses",
    "access_arguments" => array("can_access_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" =>"العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.courses.inc",
    "type" => MENU_TYPE_TAB,
    "tab_family" => "admin_courses",
  );

  $items["admin/courses/edit-course"] = array(
    "title" => "تعديل المساق",
    "page_callback" => "fp_render_form",
    "page_arguments" => array("admin_edit_course_form"),
    "access_arguments" => array("can_edit_data_entry"),
    "page_settings" => array(
      "page_has_search" => FALSE,
      "page_banner_is_link" => TRUE,
      "page_hide_report_error" => TRUE,
      "menu_links" => array(
        0 => array(
          "text" => "العودة إلى القائمة الرئيسية",
          "path" => "admin-tools/admin",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
        1 => array(
          "text" => "العودة إلى قائمة المساقات",
          "path" => "admin/courses",
          "query" => "de_catalog_year=%DE_CATALOG_YEAR%",
        ),
      ),
    ),
    "file" => menu_get_module_path("admin") . "/admin.courses.inc",
    "type" => MENU_TYPE_NORMAL_ITEM,
    "tab_parent" => "admin/courses",
  );




  return $items;
}


/**
 * This form will allow the user to duplicate an entire year's worth of data to a new
 * catalog year.
 *
 */
function admin_duplicate_year_form() {
  $form = array();

  $form["mark" . $m++] = array(
    "value" => "<p>" . t("يفضل عمل نسخة احتياطية من قاعدة البيانات الخاصة بك قبل المتابعة<br/><br/>حتى يتم تطبيق تغييرات المسودة FlightPath سيتم وضع العام الجديد في مسودة ولن يكون مرئيا في<br/>استخدمها بعناية<b>ستحذف بيانات السنة الوجهة بالكامل، إذا كانت موجودة بالفعل</b>سيسمح لك هذا النموذج بتكرار بيانات سنة كاملة (مساقات، درجات، مجموعات) إلى سنة جديدة. يستخدم هذا لإنشاء سنة جديدة من البيانات، على أساس السنة السابقة، على سبيل المثال") . "</p><hr>",
  );

  $form["source_year"] = array(
    "type" => "textfield",
    "label" => t(": من"),
    "size" => 10,
    "required" => TRUE,
    "description" => t(".أدخل سنة المصدر المكونة من أربعة أرقام التي تقوم النسخ منها. على سبيل المثال: 2007, إذا كنت تقوم بالنسخ من 2007-2008, أدخل فقط 2007"),
  );

  $form["destination_year"] = array(
    "type" => "textfield",
    "label" => t(": إلى"),
    "size" => 10,
    "required" => TRUE,
    "description" => t("إذا كنت تنسخ إلى 2009-2010, فقم فقط بإدخال 2009<b><u>.إذا كان هذا العام جاهزا بالكامل في النظام. فسيتم حذف البيانات لهذا العام</u></b>أدخل سنة المصدر المكونة من أربعة أرقام التي تنسخ إليها."),
  );

 $form["passcode"] = array(
    "type" => "password",
    "label" => t(":للمزيد من الحماية, يجب عليك إدخال كلمة مرور تغيير المسودة"),
    "required" => TRUE,
    "description" => t(".لتوفير طبقة إضافية من الأمان لهذا الإجراء القوي. لن تكون مشاريع التعديلات مطبقة بالفعل ، يتم استخدامها ببساطة كطبقة أمان إضافية FlightPath هذه كلمة مرور تم إعدادها في إعدادات"),

  );

  $form["submit"] = array(
    "type" => "submit",
    "value" => t("تسليم"),
    "description" => t("!قد يستغرق هذا الإجراء عدة دقائق للاستكمال! اضغط مرة واحدة فقط"),
    "prefix" => "<hr>",
  );



  return $form;
}


/**
 * This function should perform the actual copy of data!
 *
 * @param unknown_type $form
 * @param unknown_type $form_state
 */
function admin_duplicate_year_form_submit($form, $form_state) {
  $values = $form_state["values"];

  // Check to make sure they entered the transfer passcode correctly.
  $db = get_global_database_handler();

  if ($values["passcode"] != variable_get("admin_transfer_passcode", "h24897Ewujflnb7 wy2896432hke w490ukj")) {

    form_error("passcode", t("أو تحقق من صفحات إعدادات المسؤول) لمعرفة كلمة المرور)FlightPath خطأ! كلمة المرور التي أدخلتها غير صحيحة. تحقق مع مسؤول "));
    return;

  }


  // Okay, we made it this far, let's proceed with the copy!
  $new_year = $values["destination_year"];
  $old_year = $values["source_year"];


  /////////////////////////////////////////////////////////////////////
  // We must first begin by deleting any entries for the new_year
  // from our tables.  This is because we may have to run the parser
  // more than once while debugging and such.
  $res = db_query("DELETE FROM draft_courses WHERE `catalog_year`='$new_year' ");


  $res = db_query("DELETE FROM draft_degree_tracks WHERE `catalog_year`='$new_year' ");
  // For degrees, we first need to select all of the new_year degrees.
  $res = db_query("SELECT * FROM draft_degrees WHERE `catalog_year`='$new_year' ");
  while ($cur = db_fetch_array($res)) {
  	$res2 = db_query("DELETE FROM draft_degree_requirements WHERE `degree_id`='{$cur["degree_id"]}' ");
  }

  $res = db_query("DELETE FROM draft_degrees WHERE `catalog_year`='$new_year' ");
  // For groups, begin by selecting all the groups in that year...
  $res = db_query("SELECT * FROM draft_groups WHERE `catalog_year`='$new_year' ");
  while ($cur = db_fetch_array($res))
  {
  	// Now, select all the requirements and see if there are any sub groups...
  	$res2 = db_query("SELECT * FROM draft_group_requirements WHERE `group_id`='{$cur["group_id"]}' ");
  	while ($cur2 = db_fetch_array($res2))
  	{
  		if ($cur2["child_group_id"] > 0)
  		{
  			// Delete the child group.
  			$res3 = db_query("DELETE FROM draft_group_requirements WHERE `group_id`='{$cur2["child_group_id"]}' ");
  		}
  	}
  	// Now, delete the original requirement.
  	$res3 = db_query("DELETE FROM draft_group_requirements WHERE `group_id`='{$cur["group_id"]}' ");
  }
  $res = db_query("DELETE FROM draft_groups WHERE `catalog_year`='$new_year' ");
  //////////////////////////////////////////////////////////////////////////

  //  Okay, we have deleted any possible old entries for the new year.

  /////////////////////////////////////////////////////////////////////////
  // Our first step is to copy all of the courses from the old_year to the new_year.
  $res = db_query("SELECT * FROM draft_courses WHERE `catalog_year`='$old_year' ");
  while ($cur = db_fetch_array($res))
  {
  	extract($cur, 3, "db");

  	$course = new Course($db_course_id, false, $db, false, $old_year);
  	$course->subject_id = $db_subject_id;
  	$course->course_num = $db_course_num;
  	$course->db_exclude = $db_exclude;

  	// Now, duplicate it for the new_year.
  	$db->duplicate_course_for_year($course, $new_year);


  }


  $group_id_array = array();
  $subgroup_id_array = array();
  //////////////////////////////////////////////////////////////////////////
  //  Now, let's copy over the groups.
  $res = db_query("SELECT * FROM draft_groups WHERE `catalog_year`='$old_year' ");
  while ($cur = db_fetch_array($res))
  {
  	extract($cur, 3, "db");
  	// First, let's request a new group ID for this new group.
  	$new_group_id = $db->request_new_group_id();
  	$group_id_array[$db_group_id] = $new_group_id;

  	//$db_data_entry_comment = mysql_real_escape_string($db_data_entry_comment);
  	// Now, let's insert this top-level group back into the table
  	// as the new_year, with the new_group_id.
  	$query = "INSERT INTO draft_groups(`group_id`,`group_name`,
  							`title`,`definition`,`icon_filename`,`catalog_year`,
  							`priority`,`delete_flag`,`data_entry_comment`)
  							VALUES ('?','?','?','?','?','?','?','?','?') ";
  	$res2 = db_query($query, $new_group_id,$db_group_name,$db_title,
  								$db_definition,$db_icon_filename,$new_year,
  								$db_priority,$db_delete_flag,$db_data_entry_comment);

  	// Okay, now we need to go through the requirements for the group, and copy
  	// those over to the new_year.
  	$res3 = db_query("SELECT * FROM draft_group_requirements
  							WHERE `group_id`='$db_group_id' ");
  	while($cur3 = db_fetch_array($res3))
  	{
  		extract($cur3, 3, "db3");

  		$child_group_id = 0;
  		// Was there a child_group (a branch)?  If so, we need to copy that
  		// over too, with a new child_group_id.
  		if ($db3_child_group_id > 0)
  		{
  			// First, create the child group...
  			$new_sub_group_id = $db->request_new_group_id();
  			$subgroup_id_array[$db3_child_group_id] = $new_sub_group_id;
  			$res4 = db_query("SELECT * FROM draft_group_requirements
  							WHERE `group_id`='$db3_child_group_id' ");
  			while($cur4 = db_fetch_array($res4))
  			{
  				extract($cur4, 3, "db4");
  				$res5 = db_query("INSERT INTO draft_group_requirements
  										(`group_id`,`course_id`,`course_min_grade`,
  										`course_repeats`,`data_entry_value`)
  										VALUES ('?','?','?','?','?') ",
  				            $new_sub_group_id,$db4_course_id,
  										$db4_course_min_grade,$db4_course_repeats,
  										$db4_data_entry_value);
  			}

  			// Now, add the replace the db3_child_group_id with this new id
  			// so it will get added as a requirement.
  			$child_group_id = $new_sub_group_id;
  		}

  		// Add the row into the table...
  		$res5 = db_query("INSERT INTO draft_group_requirements
  								(`group_id`,`course_id`,`course_min_grade`,
  								`course_repeats`,`data_entry_value`,`child_group_id`)
  								VALUES ('?','?','?','?','?','?') ",
  		            $new_group_id,$db3_course_id,
  								$db3_course_min_grade,$db3_course_repeats,
  								$db3_data_entry_value,$child_group_id);


  	}
  }

  /////////////////////////////////////////////////////////////////////
  //  Now, on to transfering the degrees.
  //  We will have to use the groupIDArray we constructed earlier, which
  //  looks like $arr[old_id] = new_id.
  // Do the tracks first, since they are easier and straight forward...
  $res = db_query("SELECT * FROM draft_degree_tracks WHERE `catalog_year`='$old_year' ");
  while ($cur = db_fetch_array($res))
  {
  	extract($cur, 3, "db");

  	$res2 = db_query("INSERT INTO draft_degree_tracks
  						(`catalog_year`,`major_code`,`track_code`,`track_title`,
  						`track_short_title`,`track_description`)
  						VALUES
  						('?','?','?','?','?','?') ",
  	           $new_year,$db_major_code,$db_track_code,$db_track_title,
  						$db_track_short_title,$db_track_description);

  }
  // Now, let's do the degrees themselves.
  $res = db_query("SELECT * FROM draft_degrees WHERE `catalog_year`='$old_year' ");
  while ($cur = db_fetch_array($res))
  {
  	extract($cur, 3, "db");

  	$new_degree_id = $db->request_new_degree_id();
  	// add in the top-level degree to the table.
  	$res2 = db_query("INSERT INTO draft_degrees
  						(`degree_id`,`major_code`,`degree_type`,`title`,
  						 `semester_titles_csv`,`catalog_year`,`exclude`,`degree_class`,`public_note`)
  						 VALUES
  						('?','?','?','?','?','?','?','?','?')
  						", $new_degree_id,$db_major_code,$db_degree_type,$db_title,
  						 $db_semester_titles_csv,$new_year,$db_exclude, $db_degree_class, $db_public_note);

  	// now, pull out all of the degree_requirements.
  	$res3 = db_query("SELECT * FROM draft_degree_requirements
  							WHERE `degree_id`='$db_degree_id' ");
  	while($cur3 = db_fetch_array($res3))
  	{
  		extract($cur3, 3, "db3");
  		// If there is a required group, we must convert it to the
  		// new groupID !
  		$required_group_id = $db3_group_id;
  		if ($db3_group_id > 0)
  		{
  			$required_group_id = $group_id_array[$db3_group_id];
  			if ($required_group_id < 1 || $required_group_id == "")
  			{
  				die("could not find group new group for $old_year $db3_group_id !");
  			}
  		}


  		$res4 = db_query("INSERT INTO draft_degree_requirements
  							(`degree_id`,`semester_num`,`group_id`,`group_requirement_type`,
  							`group_hours_required`,`group_min_grade`,`course_id`,
  							`course_min_grade`,`course_requirement_type`,`data_entry_value`)
  							VALUES
  							('?','?','?','?','?','?','?','?','?','?')
  							", $new_degree_id,$db3_semester_num,$required_group_id,$db3_group_requirement_type,
  							$db3_group_hours_required,$db3_group_min_grade,$db3_course_id,
  							$db3_course_min_grade,$db3_course_requirement_type,$db3_data_entry_value);


  	}


  }


  fp_add_message(t("FlightPath اكتملت عملية النسخ الآن. يمكنك عرض السنة الجديدة باستخدام ارتباطات إدخال البيانات في القائمة الرئيسية للمشرف. تذكر ، يجب عليك تطبيق تغييرات المسودة قبل أن تكون مرئية في"));


}



/**
 * This is a systems settings form, which lets
 * the user edit advising variabled for FlightPath.
 */
function admin_advising_settings_form() {
  $form = array();

  $settings = fp_get_system_settings();

  /*
  $mark = "";
  // TODO: This needs to become genericized!  If it can't be, it should just be taken out.

  $sems = array(40,41, 60,81,82);
  for($t = $settings["current_catalog_year"]; $t <= $settings["current_catalog_year"] + 2; $t++) {
    $mark .= "<div style='padding-left: 15px;'>";
    foreach($sems as $sm) {
      $try_year = $t . $sm;
      $course = new Course();
      $course->term_id = $try_year;
      $mark .= "" . $course->get_term_description(true) . ": <b>$course->term_id</b>, &nbsp; &nbsp; &nbsp;";
    }
    $mark .= "</div>";
  }


  $form["mark" . $m++] = array(
    "type" => "markup",
    "value" => t(":المرجع السريع لرمز الفصل") . $mark,
  );
  */

  $form["available_advising_term_ids"] = array(
    "type" => "textfield",
    "label" => t("رموز فصل الإرشاد المتاحة"),
    "value" => variable_get("available_advising_term_ids", ""),
    "description" => t(".FlightPath هذه هي الشروط التي يمكن للمرشدين الأكاديميين نصح الطلاب فيها بأخذ مساق. يجب أن يتبعوا الهيكل المحدد في صفحة إعدادات بيانات المدرسة. افصل معرف الفصل الدراسي بواسطة الفواصل. مثال: 200940, 200941, 200960. تأكد من الإدخال حسب ترتيب ظهورها في"),
  );

  $form["advising_term_id"] = array(
    "type" => "textfield",
    "label" => t("رمز فصل الإرشاد الأساسي"),
    "value" => variable_get("advising_term_id", ""),
    "description" => t("Of the available term ids above, this is the default that FlightPath is set to when an advisor logs in. Ex: 200940."),
  );


  $form["current_catalog_year"] = array(
    "type" => "textfield",
    "size" => 10,
    "label" => t("كتالوج العام الدراسي الحالي"),
    "value" => variable_get("current_catalog_year", ""),
    "description" => t("هذا هو العام الذي يحمل فيها ماذا لو درجات، بالإضافة إلى وظائف أخرى مهمة. بمجرد تغيير هذا فقط سيتم تحميل كتالوج سنة جديد"),
  );

  $form["current_draft_catalog_year"] = array(
    "type" => "textfield",
    "size" => 10,
    "label" => t("المسودة الحالية لكتالوج العام"),
    "value" => variable_get("current_draft_catalog_year", ""),
    "description" => t("While in Draft mode, this is the year which Blank Degree Search loads degrees from. What If mode will always use the Current catalog year, set above. You may change this while working on a new catalog. It will not affect any other users of the system. While not working on a new catalog, set this to the same as the Current catalog year."),
  );


  $form["not_released_grades_terms"] = array(
    "type" => "textfield",
    "label" => t("العلامات التي لم يتم إصدارها لهذا الفصل"),
    "value" => variable_get("not_released_grades_terms", ""),
    "description" => t("201240, 201240:S1 :أدخل رمز الفصل, مفصول بفواصل والذي لم يتم إصداره ويجب ألا يكون مرئيا لأي من المرشدين الأكاديميين أو الطلاب. المساقات في هذه الفصول سوف تظهر درجات منتصف الفصل فقط أو لا درجات على الإطلاق. على سبيل المثال") . "<br>" . t(".إذا تُركت فارغة ، فستكون الدرجات مرئية للطلاب والمستشارين بمجرد ظهورها في قاعدة البيانات"),
  );




  return $form;
}




/**
 * Convienence function to get semester's default regular name.
 */
function admin_get_semester_name($semester_num) {

  $semester = new Semester($semester_num);
  $title = $semester->title;


  /**
  $ar = array(t("السنة الدراسية الأولى"), t("السنة الدراسية الثانية"), t("السنة الدراسية الثالثة"), t("السنة الدراسية الرابعة"));
  $s = $ar[$semester_num];
  if ($s == "")
  {
    $s = t("السنة الدراسية") . " " . ($semester_num + 1);
  }
  */

  return $title;
}



/**
 * This form lets the user apply draft changes (if they can supply the passcode)
 */
function admin_apply_draft_changes_form() {
  $form = array();

  $form["mark" . $m++] = array(
    "type" => "markup",
    "value" => t("يمكنك استخدام هذا النموذج لتطبيق تغييرات المسودة على قاعدة بيانات الإنتاج ، وإجراء تغييرات على الدرجات والمساقات والمجموعات مرئية لجميع مستخدمي النظام"),
  );

  $form["passcode"] = array(
    "type" => "password",
    "label" => t(":للمزيد من الحماية, يجب عليك إدخال كلمة مرور تغيير المسودة"),
    "required" => TRUE,
    "description" => t("لتوفير طبقة إضافية من الأمان لهذا الإجراء القوي FlightPath هذه كلمة مرور تم إعدادها في إعدادات"),

  );

  $form["submit"] = array(
    "type" => "submit",
    "value" => t("تسليم"),
    "description" => t("!قد يستغرق هذا الاجراء عدة ثوان ليكتمل! انقر مرة واحدة"),
    "prefix" => "<hr>",
  );



  return $form;
}


/**
 * Handles the actual moving of draft courses into production.
 */
function admin_apply_draft_changes_form_submit($form, $form_submit) {
  $values = $form_submit["values"];

  $db = get_global_database_handler();
  $de_catalog_year = admin_get_de_catalog_year();

  // Check to make sure they entered the transfer passcode correctly.

  if ($values["passcode"] != variable_get("admin_transfer_passcode", "h24897Ewujflnb7 wy2896432hke w490ukj")) {

    form_error("passcode", t("أو تحقق من صفحات إعدادات المسؤول) لمعرفة كلمة المرور) FlightPath خطأ! كلمة المرور التي أدخلتها غير صحيحة. تحقق مع مسؤول"));
    return;

  }


  // First, set maintenance mode...
  variable_set("maintenance_mode", TRUE);

  // Okay, so what we gotta do is truncate the production tables,
  // then copy the draft tables in.
  $table_array = array(
    "courses",
    "degree_requirements",
    "degree_tracks",
    "degrees",
    "group_requirements",
    "groups",
  );

  foreach($table_array as $table_name) {
    $draft_table_name = "draft_$table_name";
    // First, truncate existing...
    $query = "truncate table $table_name";
    $res = db_query($query);
    // Now, copy in draft changes...
    $query = "INSERT INTO $table_name
            SELECT * FROM $draft_table_name ";
    $res = db_query($query);
  }

  $db2 = new DatabaseHandler();
  // Now, we need to go through the draft_instructions table,
  // and perform each instruction one at a time.
  $res = db_query("SELECT * FROM draft_instructions
            ORDER BY `id` ");
  while($cur = db_fetch_array($res))
  {
    $instruction = trim($cur["instruction"]);

    $temp = explode(",",$instruction);

    if (trim($temp[0]) == "update_course_id") {
      $db2->update_course_id(trim($temp[1]), trim($temp[2]));
    }

    if (trim($temp[0]) == "update_course_requirement_from_name") {
      $db2->update_course_requirement_from_name(trim($temp[1]), trim($temp[2]), trim($temp[3]));
    }
  }

  // Once this is done, truncate the draft_instructions table.
  $res = db_query("TRUNCATE TABLE draft_instructions");


  // And we are done!  Set maintenance mode back to none
  variable_set("maintenance_mode", FALSE);

  // Send emails to notify programmers...
  $notify = variable_get("notify_apply_draft_changes_email_address", "");
  if ($notify != "") {
    mail($notify, "FlightPath Apply Draft Changes", "Someone has applied draft changes to FlightPath, which updated degree plans, groups, and courses.");
  }

  fp_add_message(t(".تم بنجاح تحديث قاعدة بيانات الإنتاج مع تغييرات المسودة. أصبحت التغييرات الآن مرئية لكل المستخدمين"));

  watchdog("admin", "Draft changes applied.");


}




/**
 * Get the "de_catalog_year" from the REQUEST.
 * If it's not there or invalid, pull it from our system settings.
 */
function admin_get_de_catalog_year($bool_set_earliest_if_blank = TRUE) {

  $settings = fp_get_system_settings();
  $de_catalog_year = $_REQUEST["de_catalog_year"];

  if ($bool_set_earliest_if_blank) {
    if (!$de_catalog_year || $de_catalog_year < $settings["earliest_catalog_year"]) {
      $de_catalog_year = $settings["earliest_catalog_year"];
    }
  }

  return $de_catalog_year;
}


/**
 * This is an implementation of hook_menu_handle_replacement_pattern.
 * It will search for and replace replacement patterns which we are aware of it in $str.
 */
function admin_menu_handle_replacement_pattern($str) {

  if (strpos($str, "%DE_CATALOG_YEAR%") !== 0) {
    // It contains this replacement pattern!
    $str = str_replace("%DE_CATALOG_YEAR%", admin_get_de_catalog_year(), $str);
  }

  if (strpos($str, "%SEV_FILTER%") !== 0) {
    // It contains this replacement pattern!
    $str = str_replace("%SEV_FILTER%", $_GET["sev_filter"], $str);
  }

  if (strpos($str, "%TYPE_FILTER%") !== 0) {
    // It contains this replacement pattern!
    $str = str_replace("%TYPE_FILTER%", $_GET["type_filter"], $str);
  }


  if (strpos($str, "%PAGE%") !== 0) {
    // It contains this replacement pattern!
    $str = str_replace("%PAGE%", $_GET["page"], $str);
  }



  return $str;
}


function admin_perm() {
  return array(
    "can_access_admin" => array(
      "title" => t("الدخول إلى وحدة التحكم"),
      "description" => t("FlightPath هذا هو إذن قوي! يتيح ذلك للمستخدم الوصول إلى وحدة تحكم المشرف في"),
    ),
    "can_edit_urgent_message" => array(
      "title" => t("عدل رسالة عاجلة"),
      "description" => t("يمكن للمستخدم تعديل الرسالة العاجلة التي تظهر في أعلى الصفحات"),
    ),
    "can_access_data_entry" => array(
      "title" => t("بيانات الدخول"),
      "description" => t("The user can access (view) the data-entry portion of the admin console. Degree plans, groups, and courses."),
    ),
    "can_edit_data_entry" => array(
      "title" => t("تعديل إدخال البيانات"),
      "description" => t(".هذه صلاحية قوية. يمكن للمستخدم تعديل الخطط الدراسية, المجموعات, والمساقات"),
    ),
    "can_view_advanced" => array(
      "title" => t("عرض متقدم"),
      "description" => t("قد يرى المستخدم معلومات متقدمة على الشاشة ، على سبيل المثال ، أرقام الهوية الداخلية للشهادات الجامعية و المساقات."),
    ),
    "can_apply_draft_changes" => array(
      "title" => t("تطبيق تغييرات المسودة"),
      "description" => t("يمكن للمستخدم نقل مسودة التغييرات إلى الإنتاج."),
    ),
    "can_edit_advising_settings" => array(
      "title" => t("تحرير إعدادات الإرشاد"),
      "description" => t("يجوز للمستخدم تعديل إعدادات الإرشاد ، مثل معرّفات المصطلحات المتاحة وسنة الكتالوج الحالية."),
    ),
    "display_watchdog" => array(
      "title" => t("عرض إدخالات سجل المراقبة"),
      "description" => t("يمكن للمستخدم عرض إدخالات سجل المراقبة الأخيرة. وهذا يمثل مشكلة أمنية ، لذا لا تعطيه إلا للمستخدمين الموثوق بهم."),
    ),



  );
}



/**
 * Meant to be fed into "fp_system_settings_form()", this function
 * returns an array which will automatically save values to our "variables" table.
 */
function admin_urgent_message_form() {
  $form = array();


  $form["mark" . $m++] = array(
    "type" => "markup",
    "value" => "<p>" . t("سيتم عرض أي رسالة تقوم بإدخالها في أعلى كل صفحة في النظام. يستخدم هذا لتنبيه المستخدمين بأن النظام على وشك أن يتم قطعه عن الاتصال، أو أي معلومات أخرى مطلوبة بشكل عاجل") . "</p>
                  <p>" . t("لحذف هذه الرسالة ، قم ببساطة بحذف كل النص الموجود في المربع وحفظه.") . "</p>",
  );

  $form["urgent_msg"] = array(
    "type" => "textarea",
    "label" => "Urgent message:",
    "value" => variable_get("urgent_msg", ""),
  );

  return $form;
}





/**
 * Display the details of a particular watchdog entry, specified by its table id.
 */
function admin_display_watchdog_entry($wid) {
  $rtn = "";

  fp_add_css(fp_get_module_path("admin") . '/css/admin.css');


  $severity_array = array(
    5 => "notice",
    1 => "alert",
    3 => "error",
    7 => "debug",
  );

  $res = db_query("SELECT * FROM watchdog WHERE wid = '?' ", $wid);
  $cur = db_fetch_object($res);

  $msg = t($cur->message, unserialize($cur->variables));

  $severity = $severity_array[$cur->severity];
  $when = format_date($cur->timestamp, "short");

  // Display
  $rtn .= "
    <br>
    <div class='watchdog-entry'>
      <div class='watchdog-field'>
        <label>ID:</label>
        $cur->wid
      </div>

      <div class='watchdog-field'>
        <label>Type:</label>
        $cur->type
      </div>


      <div class='watchdog-field'>
        <label>Time:</label>
        $when ($cur->timestamp)
      </div>

      <div class='watchdog-field'>
        <label>Severity:</label>
        $severity
      </div>

      <div class='watchdog-field'>
        <label>User:</label>
        $cur->user_name | id: $cur->user_id | cwid: $cur->cwid | is_student: $cur->is_student | is_faculty: $cur->is_faculty
      </div>

      <div class='watchdog-field'>
        <label>IP:</label>
        $cur->ip
      </div>

      <div class='watchdog-field'>
        <label>Location:</label>
        $cur->location
      </div>

      <div class='watchdog-field'>
        <label>Ref:</label>
        $cur->referer
      </div>

      <hr>

      <div class='watchdog-field'>
        <label class='block'>Message:</label>
        $msg
      </div>

      <div class='watchdog-field'>
        <label class='block'>Extra:</label>
        $cur->extra_data
      </div>


    </div>
  ";




  return $rtn;
}




/**
 * Displays recent watchdog entries, from the watchdog table
 *
 */
function admin_display_watchdog() {

  fp_add_css(fp_get_module_path("admin") . '/css/admin.css');

  $rtn = "";

  $rtn .= "<p>View recent watchdog entries</p>";

  $severity_array = array(
    5 => "notice",
    1 => "alert",
    3 => "error",
    7 => "debug",
  );

  $results_per_page = 50;



  $type_line = $severity_line = $limit_start = "";

  $sev_filter = $_GET["sev_filter"];
  $type_filter = $_GET["type_filter"];
  $page = $_GET["page"];

  $limit_start = 0;
  if ($page != "" && is_numeric($page)) {
    $limit_start = $results_per_page * ($page - 1);
  }
  else {
    $page = 1;
  }



  // Filters:
  $rtn .= "<form method='GET' action='" . fp_url("admin/config/watchdog") . "' class='watchdog-filters'>
            ";

  $rtn .= "Filter by:
           <span class='type-filter'>
            Type:
            <select name='type_filter'>
              <option value=''>-Any-</option>";
  $res = db_query("SELECT distinct(type) as type FROM watchdog ORDER BY type");
  while ($cur = db_fetch_object($res)) {
    $sel = ($type_filter == $cur->type) ? "selected" : "";
    $rtn .= "<option value='$cur->type' $sel>$cur->type</option>";
  }


  $rtn .= "</select>
            </span>";


  $rtn .= "
            <span class='severity-filter'>
            Severity:
            <select name='sev_filter'>
              <option value=''>-Any-</option>";
  foreach ($severity_array as $key => $value) {
    $sel = "";
    if ($sev_filter == $key) $sel = "selected";

    $rtn .= "<option value='$key' $sel>$value</option>";
  }

  $rtn .= "</select>
            </span>";




  $rtn .= "<input type='submit' value='Go'>";
  // Hack if clean URLs are not enabled:
  $rtn .= "<input type='hidden' name='q' value='admin/config/watchdog'>";

  $rtn .= "</form>";


  if ($_GET["sev_filter"] != "") {
    $severity_line = " AND severity = '" . mysql_real_escape_string($_GET["sev_filter"]) . "' ";
  }

  if ($_GET["type_filter"] != "") {
    $type_line = " AND type = '" . mysql_real_escape_string($_GET["type_filter"]) . "' ";
  }


  $rtn .= "<table class='watchdog-table' cellspacing='0' cellpadding='4'>
              <tr>
                <th>ID</th>
                <th>When</th>
                <th>Type</th>
                <th>Msg</th>
                <th>User</th>
              </tr>";

  // Okay, let's display the recent watchdog entries.
  $query = "SELECT * FROM watchdog
                   WHERE 1
                   $type_line
                   $severity_line
                   ORDER BY wid DESC
                   ";
  $res = db_query($query . " LIMIT $limit_start, $results_per_page");
  while ($cur = db_fetch_object($res)) {
    $pol = ($pol == "even") ? "odd" : "even";

    $o_msg = t($cur->message, unserialize($cur->variables));
    $o_type = $cur->type;

    // shorten msg if necessary
    $msg = substr($o_msg, 0, 120);
    if ($msg != $o_msg) {
      $msg = trim($msg) . "...";
    }

    $type = substr($o_type, 0, 15);
    if ($type != $o_type) {
      $type = trim($type) . "...";
    }



    $severity = $severity_array[$cur->severity];
    $when = format_date($cur->timestamp, "short");


    $rtn .= "
              <tr class='row-$pol row-$severity'>
                <td valign='top'>" . l($cur->wid, "admin/config/watchdog/$cur->wid", "sev_filter=$sev_filter&type_filter=$type_filter&page=$page") . "</td>
                <td valign='top'>$when</td>
                <td valign='top'>$type</td>
                <td valign='top'>$msg</td>
                <td valign='top'>$cur->user_name</td>

              </tr>

            ";

  }


  $rtn .= "</table>";

  // Now, do the page

  // Figure out the total number of results
  $total = db_result(db_query("SELECT count(wid) as count
                               FROM watchdog WHERE 1 $type_line $severity_line "));


  // Now, divide by the number of results per page.
  $pages = ceil($total / $results_per_page);

  $base_query = "sev_filter=$sev_filter&type_filter=$type_filter";

  $rtn .= "<div class='fp-pager'>";
  if ($page > 1) {
    $rtn .= "<span class='pager-link pager-first'>" . l("&laquo; first", "admin/config/watchdog", $base_query . "&page=1") . "</span>";
    $rtn .= "<span class='pager-link pager-prev'>" . l("&lt; prev", "admin/config/watchdog", $base_query . "&page=" . ($page - 1)) . "</span>";
  }
  else {
    $rtn .= "<span class='pager-link pager-first'>&laquo; first</span>";
    $rtn .= "<span class='pager-link pager-prev'>&lt; prev</span>";
  }

  // page numbers here
  // Let's get the previous X page numbers, and next X (if possible)
  $start_page_num = $page - 5;
  if ($start_page_num < 1) $start_page_num = 1;
  $end_page_num = $page + 5;
  if ($end_page_num > $pages) $end_page_num = $pages;

  if ($start_page_num > 1) {
    $rtn .= "<span class='pager-elip'>...</span>";
  }

  for ($t = $start_page_num; $t <= $end_page_num; $t++) {
    if ($page == $t) {
      // current page
      $rtn .= "<span class='pager-link pager-number pager-current'>$t</span>";
    }
    else {
      $rtn .= "<span class='pager-link pager-number'>" . l($t, "admin/config/watchdog", $base_query . "&page=$t") . "</span>";
    }
  }


  if ($end_page_num < $pages) {
    $rtn .= "<span class='pager-elip'>...</span>";
  }



  if ($page < $pages) {
    $rtn .= "<span class='pager-link pager-next'>" . l("next &gt;", "admin/config/watchdog", $base_query . "&page=" . ($page + 1)) . "</span>";
    $rtn .= "<span class='pager-link pager-last'>" . l("last &raquo;", "admin/config/watchdog", $base_query . "&page=$pages") . "</span>";
  }
  else {
    $rtn .= "<span class='pager-link pager-next'>next &gt;</span>";
    $rtn .= "<span class='pager-link pager-last'>last &raquo;</span>";
  }

  $rtn .= "</div>";




  return $rtn;

}









/**
 * This is the "main" page for the admin module.  It's what the user
 * first sees when the click to go to the Admin page.
 */
function admin_display_main() {
  $de_catalog_year = admin_get_de_catalog_year(FALSE);

  // Has the system cron been run recently?
  $cron_last_run = variable_get("cron_last_run", 0);
  if ($cron_last_run < strtotime("-7 DAY")) {
    // Warn admin that they need to have cron set up!  It's been over a week!
    fpm(t(" .للحصول على الإرشادات @status_link أو الاطلاع على صفحة @run_link كثيرا. يمكنك  cron في العمل بشكل صحيح ، يتم تكوين عملية  FlightPath الخاصة بالنظام خلال أكثر من أسبوع لكي يستمر cron لم يتم تشغيل عملية",
            array("@status_link" => l(t("حالة النظام"), "admin/config/status"),
                  "@run_link" => l(t("run cron now"), "admin/config/run-cron"))));
  }


  $rtn = "";

  fp_add_css(fp_get_module_path("admin") . "/css/admin.css");
  fp_add_js(fp_get_module_path("admin") . "/js/admin.js");

  $rtn .= "<h2>" . t("وحدة تحكم المشرف FlightPath - القائمة الرئيسية") . "</h2>";
  $rtn .= "<table class='fp-semester-table' cellpadding='5'>
           <tr>
            <td valign='top' width='50%'>
              " . fp_render_menu_block(t("أعدادات النظام"), "admin/config") . "
            </td>
            <td valign='top' width='50%'>
              ";


  // Advising Settings
  $rtn .= fp_render_curved_line("Advising Settings");
  $rtn .= "<div class='admin-advising-settings'>

       <ul>
        <li>" . t("الفصول المتاحة لتقديم الإرشاد: %v", array("%v" => variable_get("available_advising_term_ids", ""))) . "</li>
        <li>" . t("التقديم الإرشادي للفصل الدراسي الإفتراضي: %v", array("%v" => variable_get("advising_term_id", ""))) . "</li>
        <li>" . t("سنة كاتلوج الحالية: %v", array("%v" => variable_get("current_catalog_year", ""))) . "</li>
        <li>" . t("مسودة سنة كاتلوج الحالي: %v", array("%v" => variable_get("current_draft_catalog_year", ""))) . "</li>
        <li>" . t("الدرجات التي لم تصدر للفصل الدراسي: %v", array("%v" => variable_get("not_released_grades_terms", ""))) . "</li>

      </ul>";

  if (user_has_permission("can_edit_advising_settings")) {
    $rtn .= l(t("تحرير إعدادات الإرشاد"), "admin/edit-advising-settings");
  }

  $rtn .= "</div>";




  $rtn .= "</td>

           </tr>";
  $rtn .= "</table><br>"; // close table


  //$settings = fp_get_system_settings();

  $current_catalog_year = variable_get("current_catalog_year", 2006);
  $earliest_catalog_year = variable_get("earliest_catalog_year", 2006);


  if (user_has_permission("can_access_data_entry")) {
    $rtn .= fp_render_curved_line("Data Entry");

    $rtn .= "<div class='data-entry-cats'>";

    // Have a pulldown here of years, then use javascript to hide/show relavant groups.
    $rtn .= "&nbsp; &nbsp; &nbsp; " . t("اختر سنة كاتلوج") . ": <select id='data-entry-select-cats' onChange='adminHideDECats();'>";
    $selected_cat = ($de_catalog_year != "") ? $de_catalog_year : $current_catalog_year;

    for ($t = $current_catalog_year +1; $t >= $earliest_catalog_year; $t--) {
      $sel = ($t == $selected_cat) ? "selected" : "";
      $rtn .= "<option value='$t' $sel>$t-" . ($t+1) . "</option>";
    }
    $rtn .= "</select>";

    for ($t = $current_catalog_year +1; $t >= $earliest_catalog_year; $t--) {
      $rtn .= "<ul class='data-entry-for-cat data-entry-for-cat-$t'>";
      $rtn .= "<li>" . l(t("خطط شهادة جامعية لسنة @year", array("@year" => "$t-" . ($t+1))), "admin/degrees", "de_catalog_year=$t") . "</li>";
      $rtn .= "<li>" . l(t("@yearمجموعات ل ", array("@year" => "$t-" . ($t+1))), "admin/groups", "de_catalog_year=$t") . "</li>";
      $rtn .= "<li>" . l(t("@yearمساقات ل", array("@year" => "$t-" . ($t+1))), "admin/courses", "de_catalog_year=$t") . "</li>";
      $rtn .= "</ul>";
    }

    if (user_has_permission("can_edit_data_entry")) {
      $rtn .= "<b>" . t(":وظيفة المسؤول") . "</b><ul>
              <li>" . l(t("تكرار سنة كاملة من البيانات إلى السنة الجديدة"), "admin/duplicate-year") . "</li>
                </ul>";
    }


    $rtn .= "</div>";

    // Draft changes?
    $res = db_query("SELECT * FROM draft_instructions");
    if (db_num_rows($res) > 0) {
      $rtn .= "<div class='draft-changes-waiting-msg'>
                      " . t(".تم إجراء تغييرات مسودة لم يتم تطبيقها بعد. عندما تكون جاهزًا لتظهر تغييراتك في الإنتاج، انقر فوق الرابط أدناه") . "</div>";
    }
    $rtn .= "<ul class='data-entry-draft-waiting'>
              <li>" . l(t("تطبيق تغييرات المسودة"), "admin/apply-draft-changes") . "</li>
           </ul>";

  }










  return $rtn;
}
